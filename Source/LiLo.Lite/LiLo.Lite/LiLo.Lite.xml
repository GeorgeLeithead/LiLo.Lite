<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LiLo.Lite</name>
    </assembly>
    <members>
        <member name="T:LiLo.Lite.App">
            <summary>LiLo application class.</summary>
        </member>
        <member name="F:LiLo.Lite.App.socketsService">
            <summary>Sockets Service.</summary>
        </member>
        <member name="M:LiLo.Lite.App.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.App" /> class.</summary>
        </member>
        <member name="M:LiLo.Lite.App.OnResume">
            <summary>Perform actions when the application resumes from a sleeping state.</summary>
        </member>
        <member name="M:LiLo.Lite.App.OnSleep">
            <summary>Perform actions when the application enters the sleeping state.</summary>
        </member>
        <member name="M:LiLo.Lite.App.OnStart">
            <summary>Perform actions when the application starts.</summary>
        </member>
        <member name="T:LiLo.Lite.AppShell">
            <summary>App shell.</summary>
        </member>
        <member name="M:LiLo.Lite.AppShell.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.AppShell"/> class.</summary>
        </member>
        <member name="T:LiLo.Lite.Controls.CustomLabel">
            <summary>Customised label with IsSelected property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.CustomLabel.IsSelectedProperty">
            <summary>Gets or sets the IsSelected Property, and it is a bindable property.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.CustomLabel.IsSelected">
            <summary>Gets or sets a value indicating whether is selected.</summary>
        </member>
        <member name="T:LiLo.Lite.Controls.MarketViewTemplateSelector">
            <summary>Runtime based data template selector for market view.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.MarketViewTemplateSelector.CompactView">
            <summary>Gets or sets the data template for compact view.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.MarketViewTemplateSelector.MagazineView">
            <summary>Gets or sets the data template for magazine view.</summary>
        </member>
        <member name="M:LiLo.Lite.Controls.MarketViewTemplateSelector.OnSelectTemplate(System.Object,Xamarin.Forms.BindableObject)">
            <summary>Return the user selected data template.</summary>
            <param name="item">The data for which to return a template.</param>
            <param name="container">An optional container object in which the developer may have opted to store Xamarin.Forms.DataTemplateSelector objects.</param>
            <returns>A developer-defined Xamarin.Forms.DataTemplate that can be used to display item.</returns>
        </member>
        <member name="T:LiLo.Lite.Controls.PercentageTickView">
            <summary>Custom ticker percentage view.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.PercentageTickView.DefaultBackgroundColorProperty">
            <summary>Gets or sets the Default Background Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.PercentageTickView.NegativeTickBackgroundColorProperty">
            <summary>Gets or sets the Negative Tick Background Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.PercentageTickView.NegativeTickColorProperty">
            <summary>Gets or sets the Negative Tick Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.PercentageTickView.PositiveTickBackgroundColorProperty">
            <summary>Gets or sets the Positive Tick Background Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.PercentageTickView.PositiveTickColorProperty">
            <summary>Gets or sets the Positive Tick Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.PercentageTickView.PriceProperty">
            <summary>Gets or sets the Price Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.PercentageTickView.AnimationDuration">
            <summary>Animation duration in milliseconds.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.PercentageTickView.DefaultBackgroundColor">
            <summary>Gets or sets the default background colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.PercentageTickView.NegativeTickBackgroundColor">
            <summary>Gets or sets the negative tick background colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.PercentageTickView.NegativeTickColor">
            <summary>Gets or sets the negative tick colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.PercentageTickView.PositiveTickBackgroundColor">
            <summary>Gets or sets the positive tick background colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.PercentageTickView.PositiveTickColor">
            <summary>Gets or sets the positive tick colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.PercentageTickView.Price">
            <summary>Gets or sets the Price.</summary>
        </member>
        <member name="M:LiLo.Lite.Controls.PercentageTickView.OnPricePropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>Invoked when the Price is changed.</summary>
            <param name="bindable">The PercentageTickView object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="T:LiLo.Lite.Controls.TickPriceView">
            <summary>Custom ticker price view.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.TickPriceView.DefaultBackgroundColorProperty">
            <summary>Gets or sets the Default Background Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.TickPriceView.NegativeTickBackgroundColorProperty">
            <summary>Gets or sets the Negative Tick Background Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.TickPriceView.NegativeTickColorProperty">
            <summary>Gets or sets the Negative Tick Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.TickPriceView.PositiveTickBackgroundColorProperty">
            <summary>Gets or sets the Positive Tick Background Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.TickPriceView.PositiveTickColorProperty">
            <summary>Gets or sets the Positive Tick Colour Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.TickPriceView.PriceProperty">
            <summary>Gets or sets the Price Property, and it is a bindable property.</summary>
        </member>
        <member name="F:LiLo.Lite.Controls.TickPriceView.AnimationDuration">
            <summary>Animation duration in milliseconds.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.TickPriceView.DefaultBackgroundColor">
            <summary>Gets or sets the default background colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.TickPriceView.NegativeTickBackgroundColor">
            <summary>Gets or sets the negative tick background colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.TickPriceView.NegativeTickColor">
            <summary>Gets or sets the negative tick colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.TickPriceView.PositiveTickBackgroundColor">
            <summary>Gets or sets the positive tick background colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.TickPriceView.PositiveTickColor">
            <summary>Gets or sets the positive tick colour.</summary>
        </member>
        <member name="P:LiLo.Lite.Controls.TickPriceView.Price">
            <summary>Gets or sets the Price.</summary>
        </member>
        <member name="M:LiLo.Lite.Controls.TickPriceView.OnPricePropertyChanged(Xamarin.Forms.BindableObject,System.Object,System.Object)">
            <summary>Invoked when the Price is changed.</summary>
            <param name="bindable">The TickPriceView object.</param>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="T:LiLo.Lite.Extensions.ViewExtensions">
            <summary>View animation extensions.</summary>
        </member>
        <member name="M:LiLo.Lite.Extensions.ViewExtensions.CancelAnimation(Xamarin.Forms.VisualElement)">
            <summary>Cancel any existing animation.</summary>
            <param name="self">The visual element being animated.</param>
        </member>
        <member name="M:LiLo.Lite.Extensions.ViewExtensions.ColorTo(Xamarin.Forms.VisualElement,Xamarin.Forms.Color,Xamarin.Forms.Color,System.Action{Xamarin.Forms.Color},System.UInt32,Xamarin.Forms.Easing)">
            <summary>Add Colour animation to element.</summary>
            <param name="self">The visual element being animated.</param>
            <param name="fromColor">Colour to start from.</param>
            <param name="toColor">Colour to end at.</param>
            <param name="callback">Action to call back.</param>
            <param name="length">Duration of animation.</param>
            <param name="easing">Non-linear easing of animation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Extensions.ViewExtensions.ColorAnimation(Xamarin.Forms.VisualElement,System.String,System.Func{System.Double,Xamarin.Forms.Color},System.Action{Xamarin.Forms.Color},System.UInt32,Xamarin.Forms.Easing)">
            <summary>Add animation to visual element.</summary>
            <param name="element">The visual element being animated.</param>
            <param name="name">Name of animation.</param>
            <param name="transform">Transformation for animation.</param>
            <param name="callback">Action to call back.</param>
            <param name="length">Duration of animation.</param>
            <param name="easing">Non-linear easing of animation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants">
            <summary>Application constants.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Analytics">
            <summary>AppCentre analytics class constants.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Analytics.Events">
            <summary>Analytics events class constants.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Analytics.Events.FavouritesEnabled">
            <summary>Favourites enabled tracking event.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Analytics.Events.ShowSymbolLabels">
            <summary>Show Symbol Labels tracking event.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Navigation">
            <summary>Navigation class constants.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Navigation.Paths">
            <summary>Navigation paths class constants.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Navigation.Paths.Chart">
            <summary>Chart path.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Navigation.Paths.Favourites">
            <summary>Favourites path.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Navigation.Paths.Home">
            <summary>Home path.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Navigation.Paths.Settings">
            <summary>Settings path.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Preferences">
            <summary>User preferences class constants.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Analytics">
            <summary>Preferences analytics.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Preferences.Chart">
            <summary>Chart preferences class constants.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Chart.ChartBarStyle">
            <summary>Chart bar Style preference name.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Chart.ChartBaryDefaultValue">
            <summary>Chart bar style preference default value.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Chart.ChartInterval">
            <summary>Chart interval preference name.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Chart.ChartIntervalDefaultValue">
            <summary>Chart interval preference default value.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Chart.ChartStudyIndicator">
            <summary>Chart study indicator preference name.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Chart.ChartStudyIndicatorDefaultValue">
            <summary>Chart study indicator preference default value.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Chart.ChartToolBar">
            <summary>Chart tool bar preference name.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Chart.ChartToolBarDefaultValue">
            <summary>Chart tool bar preference default value.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Preferences.Favourites">
            <summary>Favourites preferences class constants.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Favourites.FavouritesCategory">
            <summary>User saved favourites preference name.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Favourites.FavouritesCategoryDefaultValue">
            <summary>User saved favourites preference default value.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Favourites.FavouritesEnabled">
            <summary>Favourites enabled preference name.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Favourites.FavouritesEnabledDefaultValue">
            <summary>Favourites enabled preference default value.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Favourites.UnlovedCategory">
            <summary>User unloved favourites preference name.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Preferences.Settings">
            <summary>Settings preferences class constants.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Settings.Theme">
            <summary>User theme preference name.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Settings.ThemeDefaultValue">
            <summary>User theme preference default value.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Settings.MarketsView">
            <summary>User markets view preference name.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Preferences.Settings.MarketsViewDefaulyValue">
            <summary>User markets view default value.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Sources">
            <summary>Sources for application files.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Sources.Icons">
            <summary>Source for icons.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Sources.Icons.DroidSource">
            <summary>Android icon source.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Sources.Icons.IosSource">
            <summary>IOS icon source.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Sources.Icons.CacheDuration">
            <summary>Cache duration in days.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.Constants.Sources.MarketFeed">
            <summary>Source for market data feed.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Sources.MarketFeed.DataFeedSeparator">
            <summary>Data feed separator.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Sources.MarketFeed.Default">
            <summary>Default market feed.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Sources.MarketFeed.Versioned">
            <summary>Versioned market feed.</summary>
        </member>
        <member name="F:LiLo.Lite.Helpers.Constants.Sources.MarketFeed.WssData">
            <summary>Secure-WebSockets data feed.</summary>
        </member>
        <member name="T:LiLo.Lite.Helpers.EnumerableHelpers">
            <summary>Enumerable helper.</summary>
        </member>
        <member name="M:LiLo.Lite.Helpers.EnumerableHelpers.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>To Observable collection.</summary>
            <typeparam name="T">Type.</typeparam>
            <param name="source">Source.</param>
            <returns>ObservableCollection{T}.</returns>
        </member>
        <member name="T:LiLo.Lite.Helpers.IEnvironment">
            <summary>Environment interface.</summary>
        </member>
        <member name="M:LiLo.Lite.Helpers.IEnvironment.SetStatusBarColor(System.Drawing.Color,System.Boolean)">
            <summary>Set the status bar colour and tint.</summary>
            <param name="color">Bar colour.</param>
            <param name="darkStatusBarTint">Tint the icons and text.</param>
        </member>
        <member name="T:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel">
            <summary>Binance ticker symbol stream data.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.CurrentPrice">
            <summary>Gets or sets close price.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.HighPrice">
            <summary>Gets or sets high price.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.HighPrice24h">
            <summary>Gets the 24hr high price.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.LastPrice">
            <summary>Gets the last price.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.LowPrice">
            <summary>Gets or sets the low price.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.LowPrice24h">
            <summary>Gets the 24hr low price.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.PChange">
            <summary>Gets or sets the price change.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.Percent">
            <summary>Gets or sets the price change percent.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.Price24hPercent">
            <summary>Gets the 24hr price change percent.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.PriceChange">
            <summary>Gets the price change.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.SymbolString">
            <summary>Gets or sets the symbol.</summary>
        </member>
        <member name="M:LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel.UpdateMarketList(LiLo.Lite.Models.BinanceModels.BinanceTickerDataModel,Xamarin.CommunityToolkit.ObjectModel.ObservableRangeCollection{LiLo.Lite.Models.Markets.MarketModel})">
            <summary>Updates the market list data.</summary>
            <param name="data">Ticker data.</param>
            <param name="marketsList">Markets list.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:LiLo.Lite.Models.BinanceModels.BinanceTickerModel">
            <summary>Binance ticker symbol stream.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerModel.Data">
            <summary>Gets or sets the ticker data.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.BinanceModels.BinanceTickerModel.Stream">
            <summary>Gets or sets the stream type.</summary>
        </member>
        <member name="T:LiLo.Lite.Models.ChartModels.BarStyleModel">
            <summary>Chart bar style model.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.ChartModels.BarStyleModel.Name">
            <summary>Gets or sets the chart bar style name.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.ChartModels.BarStyleModel.Value">
            <summary>Gets or sets the chart bar style value.</summary>
        </member>
        <member name="T:LiLo.Lite.Models.ChartModels.IndicatorModel">
            <summary>Chart indicator model.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.ChartModels.IndicatorModel.Name">
            <summary>Gets or sets the indicator name.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.ChartModels.IndicatorModel.Value">
            <summary>Gets or sets the indicator value.</summary>
        </member>
        <member name="T:LiLo.Lite.Models.ChartModels.IntervalModel">
            <summary>Chart interval model.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.ChartModels.IntervalModel.Name">
            <summary>Gets or sets the interval name.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.ChartModels.IntervalModel.Value">
            <summary>Gets or sets the interval value.</summary>
        </member>
        <member name="T:LiLo.Lite.Models.ChartModels.PopulateChartModel">
            <summary>Populate chart model(s).</summary>
        </member>
        <member name="M:LiLo.Lite.Models.ChartModels.PopulateChartModel.GetBarStyle">
            <summary>Get the chart bar style.</summary>
            <returns>List{BarStyleMenu} of chart bar style.</returns>
        </member>
        <member name="M:LiLo.Lite.Models.ChartModels.PopulateChartModel.GetIndicator">
            <summary>Get the chart indicator.</summary>
            <returns>List{IndicatorModel} of chart indicators.</returns>
        </member>
        <member name="M:LiLo.Lite.Models.ChartModels.PopulateChartModel.GetInterval">
            <summary>Get the chart interval.</summary>
            <returns>List{IntervalModel} of chart interval.</returns>
        </member>
        <member name="T:LiLo.Lite.Models.Markets.ItemsGroupViewModel">
            <summary>Items group view model.</summary>
        </member>
        <member name="M:LiLo.Lite.Models.Markets.ItemsGroupViewModel.#ctor(System.String,System.Collections.Generic.IEnumerable{LiLo.Lite.Models.Markets.ItemViewModel})">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.Models.Markets.ItemsGroupViewModel"/> class.</summary>
            <param name="name">Group name.</param>
            <param name="items">IEnumerable{ItemViewModel}.</param>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.ItemsGroupViewModel.Name">
            <summary>Gets or sets the item group name.</summary>
        </member>
        <member name="T:LiLo.Lite.Models.Markets.ItemViewModel">
            <summary>Favourite market model.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.ItemViewModel.Category">
            <summary>Gets or sets the category.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.ItemViewModel.IsBeingDragged">
            <summary>Gets or sets a value indicating whether item is being dragged.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.ItemViewModel.IsBeingDraggedOver">
            <summary>Gets or sets a value indicating whether item being dragged is over.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.ItemViewModel.Symbol">
            <summary>Gets or sets the symbol.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.ItemViewModel.SymbolImage">
            <summary>Gets or sets the symbol image.</summary>
        </member>
        <member name="T:LiLo.Lite.Models.Markets.MarketModel">
            <summary>Model for the markets information.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.formatCulture">
            <summary>Format culture - set to US.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.decimalPlaces">
            <summary>Number of decimal places.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.highPrice24h">
            <summary>24HR high price.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.highPrice24hString">
            <summary>24HR high price as string.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.lastPrice">
            <summary>Last price.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.lastPriceString">
            <summary>Last price as string.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.lowPrice24h">
            <summary>24HR low price.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.lowPrice24hString">
            <summary>24HR low price as string.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.price24hPercent">
            <summary>24HR price percentage.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.price24hPercentString">
            <summary>24HR price percentage as string.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.symbolImage">
            <summary>Currency symbol image.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.symbolString">
            <summary>Currency symbol as string.</summary>
        </member>
        <member name="F:LiLo.Lite.Models.Markets.MarketModel.displayName">
            <summary>Currency display name.</summary>
        </member>
        <member name="M:LiLo.Lite.Models.Markets.MarketModel.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.Models.Markets.MarketModel"/> class.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.DecimalPlaces">
            <summary>Gets or sets the number of decimal places to show for the currency.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.DisplayName">
            <summary>Gets or sets the Display Name for the currency.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.HighPrice24h">
            <summary>Gets or sets the 24HR high price for the currency.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.HighPrice24hString">
            <summary>Gets or sets the 24HR high price for the currency as string.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.LastPrice">
            <summary>Gets or sets the last price for the currency.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.LastPriceString">
            <summary>Gets or sets the last price as a string.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.LowPrice24h">
            <summary>Gets or sets the 24HR low price for the currency.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.LowPrice24hString">
            <summary>Gets or sets the 24HR low price as a string.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.Price24hPercent">
            <summary>Gets or sets the 24HR percentage price difference for the currency.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.Price24hPercentString">
            <summary>Gets or sets the 24HR price percentage as a string.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.Rank">
            <summary>Gets or sets the market ranking for the symbol.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.SymbolImage">
            <summary>Gets or sets the currency symbol image.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketModel.SymbolString">
            <summary>Gets or sets the currency Symbol as a string.</summary>
        </member>
        <member name="T:LiLo.Lite.Models.Markets.MarketsModel">
            <summary>Markets data model.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketsModel.Markets">
            <summary>Gets or sets an array of markets.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketsModel.IconSourceDroid">
            <summary>Gets or sets the icon source for Android.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Markets.MarketsModel.IconSourceIos">
            <summary>Gets or sets the icon source for IOS.</summary>
        </member>
        <member name="T:LiLo.Lite.Models.Notifications.PriceAlertNotification">
            <summary>Price alert model.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Notifications.PriceAlertNotification.AlertPercent">
            <summary>Gets or sets the alert percentage.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Notifications.PriceAlertNotification.AlertPrice">
            <summary>Gets or sets the alert price.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Notifications.PriceAlertNotification.Description">
            <summary>Gets or sets the alert description.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Notifications.PriceAlertNotification.Duration">
            <summary>Gets or sets the alert duration period.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Notifications.PriceAlertNotification.IsActive">
            <summary>Gets or sets a value indicating whether the alert is active.</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Notifications.PriceAlertNotification.RepeatAlert">
            <summary>Gets or sets a value indicating whether the target price event every time (true) or one-time (false).</summary>
        </member>
        <member name="P:LiLo.Lite.Models.Notifications.PriceAlertNotification.Symbol">
            <summary>Gets or sets the alert symbol.</summary>
        </member>
        <member name="T:LiLo.Lite.Resources.AppResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.AlertsComingSoonLabel">
            <summary>
              Looks up a localized string similar to Create a new alert...(coming soon).
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.DismissButton">
            <summary>
              Looks up a localized string similar to Dismiss.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ErrorNoMarkets">
            <summary>
              Looks up a localized string similar to No data found!.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ErrorNoNetwork">
            <summary>
              Looks up a localized string similar to No Network Access!.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ExitModalCancelText">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ExitModalMessage">
            <summary>
              Looks up a localized string similar to Are you sure you want to exit?.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ExitModalOkText">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ExitModalTitle">
            <summary>
              Looks up a localized string similar to Exit?.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.NoMarketDataLabel">
            <summary>
              Looks up a localized string similar to No market feed data....
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.RetryLabel">
            <summary>
              Looks up a localized string similar to Retry.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SearchBarPlaceholder">
            <summary>
              Looks up a localized string similar to Search....
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SearchIconText">
            <summary>
              Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsChartingLabelBarStyle">
            <summary>
              Looks up a localized string similar to Bar Style.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsChartingLabelDefaultIndicator">
            <summary>
              Looks up a localized string similar to Default Indicator.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsChartingLabelDefaultInterval">
            <summary>
              Looks up a localized string similar to Default Interval.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsChartingLabelDrawingToolBar">
            <summary>
              Looks up a localized string similar to Drawing Tools Bar.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsFavouriteManage">
            <summary>
              Looks up a localized string similar to Manage &gt;.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsFavouritesLabelUse">
            <summary>
              Looks up a localized string similar to Use Favourites.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsGitHub">
            <summary>
              Looks up a localized string similar to https://github.com/GeorgeLeithead/LiLo.Lite.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsHeadingAbout">
            <summary>
              Looks up a localized string similar to About.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsHeadingCharting">
            <summary>
              Looks up a localized string similar to Charting.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsHeadingFavourites">
            <summary>
              Looks up a localized string similar to Favourites.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsHeadingTheme">
            <summary>
              Looks up a localized string similar to Theme.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsHeadingView">
            <summary>
              Looks up a localized string similar to View.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsIconText">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsIww">
            <summary>
              Looks up a localized string similar to https://www.internetwideworld.com/lilolite.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsLabelAbout">
             <summary>
               Looks up a localized string similar to Copyright George Leithead, Ver: {0}
            
            Please contact us on the social platform(s) below.  Please include the application information from above (version, release, etc.), your device details, a description of your problem and steps to replicate.  You can also just reach out and say &quot;hello&quot;..
             </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsTemeLabelSystem">
            <summary>
              Looks up a localized string similar to System.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsThemeLabelDark">
            <summary>
              Looks up a localized string similar to Dark.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsThemeLabelLight">
            <summary>
              Looks up a localized string similar to Light.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsTwitter">
            <summary>
              Looks up a localized string similar to https://twitter.com/LiLoMobileApp.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.SettingsViewLabel">
            <summary>
              Looks up a localized string similar to Compact view.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.TitleMarketsListError">
            <summary>
              Looks up a localized string similar to Markets list error.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.TitleNetworkError">
            <summary>
              Looks up a localized string similar to Network Error.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.TradingViewPage">
             <summary>
               Looks up a localized string similar to &lt;html&gt;
            &lt;body class=&quot;X1X&quot;&gt;
            &lt;style type=&quot;text/css&quot;&gt;
            body { margin: 0; }
            .dark {
            	background-color: black;
            	color: white;
            }
            
            .light {
            	background-color: white;
            	color: black;
            }
            iframe.body {
            	-moz-transform:scale(0.75);
            	-moz-transform-origin: 0 0;
            	-o-transform: scale(0.75);
            	-o-transform-origin: 0 0;
            	-webkit-transform: scale(0.75);
            	-webkit-transform-origin: 0 0;
            }
            &lt;/style&gt;
            &lt;!-- TradingView Widget BEGIN --&gt;
            &lt;div class=&quot;tradingview-widget-container&quot;&gt;
              &lt;div id=&quot;tradingview_lilo&quot;&gt;&lt;/div [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ViewTitleAlerts">
            <summary>
              Looks up a localized string similar to Alerts.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ViewTitleChart">
            <summary>
              Looks up a localized string similar to Chart.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ViewTitleFavourites">
            <summary>
              Looks up a localized string similar to Manage Favourites.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ViewTitleMarkets">
            <summary>
              Looks up a localized string similar to LiLo.Lite.
            </summary>
        </member>
        <member name="P:LiLo.Lite.Resources.AppResources.ViewTitleSettings">
            <summary>
              Looks up a localized string similar to Settings.
            </summary>
        </member>
        <member name="T:LiLo.Lite.Services.DataStore">
            <summary>Application data store.</summary>
        </member>
        <member name="F:LiLo.Lite.Services.DataStore.marketsData">
            <summary>Markets list.</summary>
        </member>
        <member name="P:LiLo.Lite.Services.DataStore.Version">
            <summary>Gets the application version.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.DataStore.GetMarketsGroupedByFavourites">
            <summary>Get markets grouped by favourites.</summary>
            <returns>IEnumerable{ItemViewModel} of categorised markets.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.DataStore.MarketsWss">
            <summary>Gets the markets WSS stream.</summary>
            <returns>WSS stream.</returns>
        </member>
        <member name="T:LiLo.Lite.Services.Dialog.DialogService">
            <summary>Dialogue service.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.Dialog.DialogService.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.Services.Dialog.DialogService"/> class.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.Dialog.DialogService.ShowAlertAsync(System.String,System.String,System.String)">
            <summary>Show a cross-platform alert.</summary>
            <param name="message">Alert message.</param>
            <param name="title">Alert title.</param>
            <param name="buttonLabel">Alert button label text.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Dialog.DialogService.ShowConfirmAsync(System.String,System.String,System.String,System.String)">
            <summary>Show a cross-platform confirm dialogue.</summary>
            <param name="title">Confirm title.</param>
            <param name="message">Confirm message.</param>
            <param name="okText">OK button label text.</param>
            <param name="cancelText">Cancel button label text.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Dialog.DialogService.ShowPromptAsync(System.String,System.String,System.String,System.String)">
            <summary>Show a cross-platform prompt.</summary>
            <param name="title">Prompt title.</param>
            <param name="message">Prompt message.</param>
            <param name="okText">OK button label text.</param>
            <param name="cancelText">Cancel button label text.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Dialog.DialogService.ShowToastAsync(System.String)">
            <summary>Show a cross-platform Toast.</summary>
            <param name="message">Toast message.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:LiLo.Lite.Services.Dialog.IDialogService">
            <summary>Dialogue service interface.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.Dialog.IDialogService.ShowAlertAsync(System.String,System.String,System.String)">
            <summary>Show a cross-platform alert.</summary>
            <param name="message">Alert message.</param>
            <param name="title">Alert title.</param>
            <param name="buttonLabel">Alert button label text.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Dialog.IDialogService.ShowConfirmAsync(System.String,System.String,System.String,System.String)">
            <summary>Show a cross-platform confirm dialogue.</summary>
            <param name="title">Confirm title.</param>
            <param name="message">Confirm message.</param>
            <param name="okText">OK button label text.</param>
            <param name="cancelText">Cancel button label text.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Dialog.IDialogService.ShowPromptAsync(System.String,System.String,System.String,System.String)">
            <summary>Show a cross-platform prompt.</summary>
            <param name="title">Prompt title.</param>
            <param name="message">Prompt message.</param>
            <param name="okText">OK button label text.</param>
            <param name="cancelText">Cancel button label text.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Dialog.IDialogService.ShowToastAsync(System.String)">
            <summary>Show a cross-platform Toast.</summary>
            <param name="message">Toast message.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:LiLo.Lite.Services.Markets.IMarketsHelperService">
            <summary>Markets helper service.</summary>
        </member>
        <member name="P:LiLo.Lite.Services.Markets.IMarketsHelperService.MarketsList">
            <summary>Gets or sets a list of Markets.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.Markets.IMarketsHelperService.GetWss">
            <summary>Get the WSS feed string.</summary>
            <returns>WSS URL.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Markets.IMarketsHelperService.Init">
            <summary>Initialises task for the markets helper service.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Markets.IMarketsHelperService.WebSockets_OnMessageAsync(System.Object,WebSocketSharp.MessageEventArgs)">
            <summary>Message received handler.</summary>
            <param name="sender">Message sender.</param>
            <param name="e">Message event arguments.</param>
        </member>
        <member name="T:LiLo.Lite.Services.Markets.MarketsHelperService">
            <summary>Markets helper service.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.Markets.MarketsHelperService.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.Services.Markets.MarketsHelperService" /> class.</summary>
        </member>
        <member name="P:LiLo.Lite.Services.Markets.MarketsHelperService.DialogService">
            <summary>Gets the dialogue service.</summary>
        </member>
        <member name="P:LiLo.Lite.Services.Markets.MarketsHelperService.MarketsList">
            <summary>Gets or sets an observable list of markets.</summary>
        </member>
        <member name="P:LiLo.Lite.Services.Markets.MarketsHelperService.SourceMarketsList">
            <summary>Gets or sets an list of markets.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.Markets.MarketsHelperService.GetWss">
            <summary>Get WSS connection.</summary>
            <returns>Connection string.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Markets.MarketsHelperService.Init">
            <summary>Initialises task for the markets helper service.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Markets.MarketsHelperService.WebSockets_OnMessageAsync(System.Object,WebSocketSharp.MessageEventArgs)">
            <summary>WebSockets message handler.</summary>
            <param name="sender">Sockets service.</param>
            <param name="e">Message event arguments.</param>
        </member>
        <member name="M:LiLo.Lite.Services.Markets.MarketsHelperService.GetMessageType(System.String)">
            <summary>Get the message type.</summary>
            <param name="message">Sockets message.</param>
            <returns>Task result.</returns>
        </member>
        <member name="T:LiLo.Lite.Services.Sockets.ISocketsService">
            <summary>Web Sockets Service interface.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.ISocketsService.Connect">
            <summary>Connects to the sockets service.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.ISocketsService.WebSocket_Close">
            <summary>Handle when the application closes the sockets connection.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.ISocketsService.WebSocket_OnConnect">
            <summary>Handle when the application requests a sockets connection.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.ISocketsService.WebSocket_OnResume">
            <summary>Handle when the application resumes from sleep.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.ISocketsService.WebSocket_OnSleep">
            <summary>Handle when the application goes into sleep.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:LiLo.Lite.Services.Sockets.SocketsService">
            <summary>Web Sockets Service interface.</summary>
        </member>
        <member name="F:LiLo.Lite.Services.Sockets.SocketsService.isResumed">
            <summary>Has the service been resumed.</summary>
        </member>
        <member name="F:LiLo.Lite.Services.Sockets.SocketsService.webSocket">
            <summary>Web Socket.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.SocketsService.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.Services.Sockets.SocketsService"/> class.</summary>
        </member>
        <member name="P:LiLo.Lite.Services.Sockets.SocketsService.DialogService">
            <summary>Gets the dialogue service.</summary>
        </member>
        <member name="P:LiLo.Lite.Services.Sockets.SocketsService.IsConnected">
            <summary>Gets a value indicating whether the sockets service is connected.</summary>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.SocketsService.Connect">
            <summary>Connects to the Sockets Service.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.SocketsService.WebSocket_Close">
            <summary>Handle when the application closes the sockets connection.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.SocketsService.WebSocket_OnConnect">
            <summary>Handle when the application requests a sockets connection.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.SocketsService.WebSocket_OnResume">
            <summary>Handle when the application resumes from sleep.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.SocketsService.WebSocket_OnSleep">
            <summary>Handle when the application goes into sleep.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.SocketsService.WebSocket_OnClose(System.Object,WebSocketSharp.CloseEventArgs)">
            <summary>Handle when the sockets connection closes.</summary>
            <param name="sender">Sender object.</param>
            <param name="e">Close event arguments.</param>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.SocketsService.WebSocket_OnError(System.Object,WebSocketSharp.ErrorEventArgs)">
            <summary>Handle when the sockets connection errors.</summary>
            <param name="sender">Sender object.</param>
            <param name="e">Error event arguments.</param>
        </member>
        <member name="M:LiLo.Lite.Services.Sockets.SocketsService.WebSocket_OnMessage(System.Object,WebSocketSharp.MessageEventArgs)">
            <summary>Handle when the sockets connection receives a message.</summary>
            <param name="sender">Sender object.</param>
            <param name="e">Message event arguments.</param>
        </member>
        <member name="T:LiLo.Lite.ViewModels.Base.ViewModelBase">
            <summary>View model base class.</summary>
        </member>
        <member name="F:LiLo.Lite.ViewModels.Base.ViewModelBase.isBusy">
            <summary>View is busy.</summary>
        </member>
        <member name="F:LiLo.Lite.ViewModels.Base.ViewModelBase.title">
            <summary>View title.</summary>
        </member>
        <member name="M:LiLo.Lite.ViewModels.Base.ViewModelBase.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.ViewModels.Base.ViewModelBase" /> class.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.Base.ViewModelBase.DialogService">
            <summary>Gets the dialogue service.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.Base.ViewModelBase.IsBusy">
            <summary>Gets or sets a value indicating whether the view is busy.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.Base.ViewModelBase.MarketsHelperService">
            <summary>Gets the markets helper service.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.Base.ViewModelBase.SocketsService">
            <summary>Gets the sockets service.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.Base.ViewModelBase.Title">
            <summary>gets or sets a value for the view title.</summary>
        </member>
        <member name="T:LiLo.Lite.ViewModels.ChartViewModel">
            <summary>Chart view model.</summary>
        </member>
        <member name="M:LiLo.Lite.ViewModels.ChartViewModel.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.ViewModels.ChartViewModel"/> class.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.ChartViewModel.SelectedItem">
            <summary>Gets or sets the selected market item.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.ChartViewModel.Symbol">
            <summary>Sets the market symbol.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.ChartViewModel.TradingViewChart">
            <summary>Gets or sets the trading view chart source.</summary>
        </member>
        <member name="T:LiLo.Lite.ViewModels.FavouritesViewModel">
            <summary>Favourites view model.</summary>
        </member>
        <member name="M:LiLo.Lite.ViewModels.FavouritesViewModel.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.ViewModels.FavouritesViewModel"/> class.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.FavouritesViewModel.FavouriteItems">
            <summary>Gets or sets a collection of favourite markets.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.FavouritesViewModel.ItemDragged">
            <summary>Gets an item dragged command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.FavouritesViewModel.ItemDraggedOver">
            <summary>Gets an item dragged complete command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.FavouritesViewModel.ItemDragLeave">
            <summary>Gets an item dragged left command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.FavouritesViewModel.ItemDropped">
            <summary>Gets an item dropped command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.FavouritesViewModel.MarketItems">
            <summary>Gets or sets a collection of markets.</summary>
        </member>
        <member name="T:LiLo.Lite.ViewModels.HomeViewModel">
            <summary>Home view model.</summary>
        </member>
        <member name="F:LiLo.Lite.ViewModels.HomeViewModel.marketsList">
            <summary>Observable list of markets.</summary>
        </member>
        <member name="M:LiLo.Lite.ViewModels.HomeViewModel.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.ViewModels.HomeViewModel"/> class.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.FavouritesEnabled">
            <summary>Gets or sets a value indicating whether the favourites is enabled.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.FavouritesList">
            <summary>Gets or sets the users favourites list.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.GoToSettingsCommand">
            <summary>Gets the navigate to settings command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.GridItemsLayoutSpan">
            <summary>Gets or sets the items layout span.</summary>
            <remarks>To handle landscape and portrait orientation.</remarks>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.IsSearchVisible">
            <summary>Gets or sets the search visibility.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.MarketsList">
            <summary>Gets or sets a collection of values to be displayed in the markets view.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.RetryButtonClicked">
            <summary>Gets or sets the retry button command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.SelectedItem">
            <summary>Gets or sets the selected item.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.ShowSearchCommand">
            <summary>Gets a show search command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.HomeViewModel.Symbol">
            <summary>Gets or sets the market symbol.</summary>
        </member>
        <member name="M:LiLo.Lite.ViewModels.HomeViewModel.Init">
            <summary>Initialise the home view model.</summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:LiLo.Lite.ViewModels.SettingsViewModel">
            <summary>Settings view model.</summary>
        </member>
        <member name="M:LiLo.Lite.ViewModels.SettingsViewModel.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.ViewModels.SettingsViewModel"/> class.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.About">
            <summary>Gets the about application details.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.BarStyleModels">
            <summary>Gets a collection of chart bar style models.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.ChartBarStyleSelectedItem">
            <summary>Gets or sets the chart bar style selected item.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.ChartIndicatorSelectedItem">
            <summary>Gets or sets the chart indicator selected item.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.ChartIntervalSelectedItem">
            <summary>Gets or sets the chart interval selected item.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.ChartToolBar">
            <summary>Gets or sets a value indicating whether chart tool bar is enabled.</summary>
            <remarks>"hide_side_toolbar": true .</remarks>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.DisplayMagazineView">
            <summary>Gets or set a value indicating whether to display Magazine view.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.EdgeBrowserCommand">
            <summary>Gets the edge browser command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.FavouritesEnabled">
            <summary>Gets or sets a value indicating whether favourites is enabled.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.FavouritesManageCommand">
            <summary>Gets the favourites manage command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.GithubCommand">
            <summary>Gets the GitHub command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.IndicatorModels">
            <summary>Gets a collection of chart indicator models.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.IntervalModels">
            <summary>Gets a collection of chart interval models.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.ShowSymbolLabels">
            <summary>Gets or sets a value indicating whether show labels is enables.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.ThemeDark">
            <summary>Gets a value indicating whether dark theme is enabled.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.ThemeLight">
            <summary>Gets a value indicating whether light theme is enabled.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.ThemeSystem">
            <summary>Gets a value indicating whether system theme is enabled.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.TwitterCommand">
            <summary>Gets the twitter command.</summary>
        </member>
        <member name="P:LiLo.Lite.ViewModels.SettingsViewModel.Version">
            <summary>Gets the application version.</summary>
        </member>
        <member name="T:LiLo.Lite.Views.ChartView">
            <summary>Chart View class.</summary>
        </member>
        <member name="M:LiLo.Lite.Views.ChartView.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.Views.ChartView" /> class.</summary>
        </member>
        <member name="M:LiLo.Lite.Views.ChartView.OnAppearing">
            <inheritdoc/>
        </member>
        <member name="M:LiLo.Lite.Views.ChartView.OnBackButtonPressed">
            <summary>Handle the device back button being pressed.</summary>
            <returns>true; cancellation of back button.</returns>
        </member>
        <member name="M:LiLo.Lite.Views.ChartView.OnDisappearing">
            <inheritdoc/>
        </member>
        <member name="M:LiLo.Lite.Views.ChartView.WebView_Navigating(System.Object,Xamarin.Forms.WebNavigatingEventArgs)">
            <summary>Navigating in the Web view.</summary>
            <param name="sender">Sender object.</param>
            <param name="e">Web navigation Event arguments.</param>
            <remarks>Prevent users from navigating to anywhere else other than where we want.</remarks>
        </member>
        <member name="T:LiLo.Lite.Views.FavouritesView">
            <summary>Favourites page view.</summary>
        </member>
        <member name="M:LiLo.Lite.Views.FavouritesView.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.Views.FavouritesView"/> class.</summary>
        </member>
        <member name="M:LiLo.Lite.Views.FavouritesView.OnBackButtonPressed">
            <summary>Handle the device back button being pressed.</summary>
            <returns>true; cancellation of back button.</returns>
        </member>
        <member name="T:LiLo.Lite.Views.HomeView">
            <summary>Home page view.</summary>
        </member>
        <member name="M:LiLo.Lite.Views.HomeView.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.Views.HomeView" /> class.</summary>
        </member>
        <member name="M:LiLo.Lite.Views.HomeView.OnAppearing">
            <inheritdoc/>
        </member>
        <member name="M:LiLo.Lite.Views.HomeView.OnBackButtonPressed">
            <summary>Handle the device back button being pressed.</summary>
            <remarks>As this is the root page, we have to prevent the back button otherwise it will exit the application.</remarks>
            <returns>true; cancellation of back button.</returns>
        </member>
        <member name="M:LiLo.Lite.Views.HomeView.OnDisappearing">
            <inheritdoc/>
        </member>
        <member name="M:LiLo.Lite.Views.HomeView.OnSizeAllocated(System.Double,System.Double)">
            <inheritdoc/>
            <remarks>1 = Portrait mode, 2 = Landscape mode.</remarks>
        </member>
        <member name="M:LiLo.Lite.Views.HomeView.SearchBarTextChanged(System.Object,Xamarin.Forms.TextChangedEventArgs)">
            <summary>Search Bar text changed.</summary>
            <param name="sender">Sender object.</param>
            <param name="e">Text changed event arguments.</param>
        </member>
        <member name="T:LiLo.Lite.Views.SettingsView">
            <summary>Settings view.</summary>
        </member>
        <member name="M:LiLo.Lite.Views.SettingsView.#ctor">
            <summary>Initialises a new instance of the <see cref="T:LiLo.Lite.Views.SettingsView"/> class.</summary>
        </member>
        <member name="M:LiLo.Lite.Views.SettingsView.OnBackButtonPressed">
            <summary>Handle the device back button being pressed.</summary>
            <returns>true; cancellation of back button.</returns>
        </member>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>Fix for C#9 quirk in non-.NET 5 project and when using a record.</summary>
        </member>
    </members>
</doc>
